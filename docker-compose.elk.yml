version: '3.8'

services:
  # ========================================
  # ELASTICSEARCH
  # ========================================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: encore-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.graph.enabled=false
      - xpack.watcher.enabled=false
      - xpack.ml.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ========================================
  # LOGSTASH
  # ========================================
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: encore-logstash
    environment:
      - XPACK_MONITORING_ENABLED=false
    volumes:
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./elk/logstash/config:/usr/share/logstash/config:ro
    ports:
      - "5044:5044"  # Logstash Beats input
      - "5000:5000"  # Logstash TCP input
      - "9600:9600"  # Logstash monitoring
    networks:
      - elk
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    command: logstash -f /usr/share/logstash/pipeline/

  # ========================================
  # KIBANA
  # ========================================
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: encore-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
      - XPACK_MONITORING_ENABLED=false
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ========================================
  # FILEBEAT (para logs de archivos)
  # ========================================
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: encore-filebeat
    user: root
    volumes:
      - ./logs:/var/log/encore:ro
      - ./elk/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - filebeat-data:/usr/share/filebeat/data
    networks:
      - elk
    depends_on:
      logstash:
        condition: service_started
    restart: unless-stopped

  # ========================================
  # METRICBEAT (para m√©tricas del sistema)
  # ========================================
  metricbeat:
    image: docker.elastic.co/beats/metricbeat:8.11.0
    container_name: encore-metricbeat
    user: root
    volumes:
      - ./elk/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - metricbeat-data:/usr/share/metricbeat/data
    networks:
      - elk
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  # ========================================
  # APM SERVER (para Application Performance Monitoring)
  # ========================================
  apm-server:
    image: docker.elastic.co/apm/apm-server:8.11.0
    container_name: encore-apm-server
    environment:
      - output.elasticsearch.hosts=["elasticsearch:9200"]
      - apm-server.host=0.0.0.0:8200
      - apm-server.secret_token=encore-apm-token
      - logging.level=info
    volumes:
      - ./elk/apm-server/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    ports:
      - "8200:8200"
    networks:
      - elk
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

volumes:
  elasticsearch-data:
    driver: local
  filebeat-data:
    driver: local
  metricbeat-data:
    driver: local

networks:
  elk:
    driver: bridge