# =============================================================================
# Encore Analytics Service - Environment Configuration
# =============================================================================

# -----------------------------------------------------------------------------
# Server Configuration
# -----------------------------------------------------------------------------
NODE_ENV=development
SERVER_HOST=0.0.0.0
SERVER_PORT=3003
SERVICE_VERSION=1.0.0
MAX_REQUEST_SIZE=10mb
ENABLE_REQUEST_LOGGING=true
ENABLE_METRICS=true
TRUST_PROXY=false

# -----------------------------------------------------------------------------
# Database Configuration (PostgreSQL)
# -----------------------------------------------------------------------------
DB_HOST=localhost
DB_PORT=5432
DB_NAME=encore_analytics
DB_USER=encore_user
DB_PASSWORD=your_database_password_here
DB_SSL=false
DB_POOL_SIZE=10
DB_CONNECTION_TIMEOUT=30000
DB_QUERY_TIMEOUT=60000
DB_RUN_MIGRATIONS=true
DB_LOGGING=true

# -----------------------------------------------------------------------------
# Redis Configuration (Cache)
# -----------------------------------------------------------------------------
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_KEY_PREFIX=encore:analytics:
REDIS_CONNECTION_TIMEOUT=10000
REDIS_COMMAND_TIMEOUT=5000
REDIS_RETRY_DELAY=100
REDIS_MAX_RETRIES=3
REDIS_LAZY_CONNECT=true

# -----------------------------------------------------------------------------
# Queue Configuration (Redis for Bull)
# -----------------------------------------------------------------------------
QUEUE_REDIS_HOST=localhost
QUEUE_REDIS_PORT=6379
QUEUE_REDIS_PASSWORD=
QUEUE_REDIS_DB=1
QUEUE_REDIS_KEY_PREFIX=queue:
QUEUE_REDIS_CONNECTION_TIMEOUT=10000
QUEUE_REDIS_COMMAND_TIMEOUT=5000
QUEUE_REDIS_RETRY_DELAY=100
QUEUE_REDIS_MAX_RETRIES=3
QUEUE_REDIS_LAZY_CONNECT=true

# Queue Job Options
QUEUE_REMOVE_ON_COMPLETE=100
QUEUE_REMOVE_ON_FAIL=50
QUEUE_ATTEMPTS=3
QUEUE_BACKOFF_TYPE=exponential
QUEUE_BACKOFF_DELAY=2000

# Queue Concurrency
QUEUE_EVENTS_CONCURRENCY=10
QUEUE_REPORTS_CONCURRENCY=5
QUEUE_ANALYTICS_CONCURRENCY=3

# -----------------------------------------------------------------------------
# WebSocket Configuration
# -----------------------------------------------------------------------------
WEBSOCKET_ENABLED=true
WEBSOCKET_PORT=
WEBSOCKET_PATH=/socket.io
WEBSOCKET_CORS_ORIGINS=http://localhost:3000,http://localhost:3001
WEBSOCKET_CORS_CREDENTIALS=true
WEBSOCKET_PING_TIMEOUT=60000
WEBSOCKET_PING_INTERVAL=25000
WEBSOCKET_MAX_CONNECTIONS=1000

# -----------------------------------------------------------------------------
# CORS Configuration
# -----------------------------------------------------------------------------
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:3002
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,PATCH,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With
CORS_EXPOSED_HEADERS=X-Total-Count,X-Page-Count
CORS_CREDENTIALS=true
CORS_MAX_AGE=86400

# -----------------------------------------------------------------------------
# Cache Configuration
# -----------------------------------------------------------------------------
CACHE_DEFAULT_TTL=300
CACHE_MAX_KEYS=1000
CACHE_CHECK_PERIOD=600
CACHE_USE_CLONES=false
CACHE_DELETE_ON_EXPIRE=true

# -----------------------------------------------------------------------------
# Rate Limiting Configuration
# -----------------------------------------------------------------------------
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_SUCCESSFUL=false
RATE_LIMIT_SKIP_FAILED=false
RATE_LIMIT_KEY_GENERATOR=ip

# -----------------------------------------------------------------------------
# Authentication Configuration
# -----------------------------------------------------------------------------
JWT_SECRET=your_super_secret_jwt_key_here_change_in_production
JWT_EXPIRES_IN=24h
JWT_ISSUER=encore-analytics
JWT_AUDIENCE=encore-users
BCRYPT_ROUNDS=12
SESSION_SECRET=your_super_secret_session_key_here_change_in_production
SESSION_MAX_AGE=86400000

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------
LOG_LEVEL=debug
LOG_FORMAT=dev
LOG_COLORIZE=true
LOG_TIMESTAMP=true
LOG_FILENAME=
LOG_MAX_SIZE=20m
LOG_MAX_FILES=5
LOG_DATE_PATTERN=YYYY-MM-DD

# -----------------------------------------------------------------------------
# Metrics Configuration
# -----------------------------------------------------------------------------
METRICS_ENABLED=true
METRICS_COLLECT_DEFAULT=true
METRICS_PREFIX=analytics_
METRICS_BUCKETS=0.1,0.5,1,2,5
METRICS_PERCENTILES=0.5,0.9,0.95,0.99

# -----------------------------------------------------------------------------
# File Storage Configuration
# -----------------------------------------------------------------------------
STORAGE_REPORTS_PATH=./storage/reports
STORAGE_TEMP_PATH=./storage/temp
STORAGE_MAX_FILE_SIZE=104857600
STORAGE_ALLOWED_FORMATS=csv,json,pdf,xlsx
STORAGE_CLEANUP_INTERVAL=3600000
STORAGE_RETENTION_DAYS=30

# -----------------------------------------------------------------------------
# External Services Configuration
# -----------------------------------------------------------------------------

# User Service
USER_SERVICE_URL=http://localhost:3001
USER_SERVICE_TIMEOUT=5000
USER_SERVICE_RETRIES=3

# Music Service
MUSIC_SERVICE_URL=http://localhost:3002
MUSIC_SERVICE_TIMEOUT=5000
MUSIC_SERVICE_RETRIES=3

# Menu Service
MENU_SERVICE_URL=http://localhost:3004
MENU_SERVICE_TIMEOUT=5000
MENU_SERVICE_RETRIES=3

# Notification Service
NOTIFICATION_SERVICE_URL=http://localhost:3005
NOTIFICATION_SERVICE_TIMEOUT=5000
NOTIFICATION_SERVICE_RETRIES=3

# -----------------------------------------------------------------------------
# Development & Testing
# -----------------------------------------------------------------------------

# Test Database (Optional - for running tests)
TEST_DB_HOST=localhost
TEST_DB_PORT=5432
TEST_DB_NAME=encore_analytics_test
TEST_DB_USER=postgres
TEST_DB_PASSWORD=your_test_database_password_here

# Test Redis (Optional - for running tests)
TEST_REDIS_HOST=localhost
TEST_REDIS_PORT=6379
TEST_REDIS_DB=15

# -----------------------------------------------------------------------------
# Production Specific (Uncomment and configure for production)
# -----------------------------------------------------------------------------

# SSL/TLS Configuration
# SSL_KEY_PATH=/path/to/ssl/private.key
# SSL_CERT_PATH=/path/to/ssl/certificate.crt
# SSL_CA_PATH=/path/to/ssl/ca-bundle.crt

# External Monitoring
# SENTRY_DSN=https://your-sentry-dsn-here
# NEW_RELIC_LICENSE_KEY=your-new-relic-license-key
# DATADOG_API_KEY=your-datadog-api-key

# Cloud Storage (if using cloud storage for reports)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=encore-analytics-reports

# Email Configuration (for report notifications)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_SECURE=false
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-email-password

# -----------------------------------------------------------------------------
# Notes:
# -----------------------------------------------------------------------------
# 1. Copy this file to .env and fill in your actual values
# 2. Never commit .env files to version control
# 3. Use strong, unique passwords and secrets in production
# 4. Consider using environment-specific configuration management
# 5. Regularly rotate secrets and API keys
# 6. Use SSL/TLS in production environments
# 7. Configure proper firewall rules for database and Redis access
# 8. Monitor resource usage and adjust pool sizes accordingly
# 9. Set up proper backup strategies for your databases
# 10. Use container orchestration secrets management in containerized deployments